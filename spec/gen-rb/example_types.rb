#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Gender
  MALE = 0
  FEMALE = 1
  VALUE_MAP = {0 => "MALE", 1 => "FEMALE"}
  VALID_VALUES = Set.new([MALE, FEMALE]).freeze
end

class PhoneNumber
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONTRY_CODE = 1
  AREA_CODE = 2
  NUMBER = 3

  FIELDS = {
    CONTRY_CODE => {:type => ::Thrift::Types::STRING, :name => 'contry_code'},
    AREA_CODE => {:type => ::Thrift::Types::STRING, :name => 'area_code'},
    NUMBER => {:type => ::Thrift::Types::STRING, :name => 'number'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Person
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  PHONE = 2
  CHILDREN = 3
  NOTES = 4
  GENDER = 5
  AGE = 6
  FAVORITE_NUMBERS = 7

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    PHONE => {:type => ::Thrift::Types::STRUCT, :name => 'phone', :class => ::PhoneNumber},
    CHILDREN => {:type => ::Thrift::Types::LIST, :name => 'children', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Person}},
    NOTES => {:type => ::Thrift::Types::LIST, :name => 'notes', :element => {:type => ::Thrift::Types::STRING}},
    GENDER => {:type => ::Thrift::Types::I32, :name => 'gender', :enum_class => ::Gender},
    AGE => {:type => ::Thrift::Types::I32, :name => 'age'},
    FAVORITE_NUMBERS => {:type => ::Thrift::Types::SET, :name => 'favorite_numbers', :element => {:type => ::Thrift::Types::I32}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @gender.nil? || ::Gender::VALID_VALUES.include?(@gender)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field gender!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

